apply plugin: "com.android.application"

repositories {
    flatDir {
        dirs 'libs'
    }
}

android {
    compileSdkVersion 24
    buildToolsVersion '24.0.1'

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 24
        renderscriptTargetApi 22
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        renderscriptSupportModeEnabled true
        versionName '0.5.1'
        versionCode 1





    }
    /*
    allprojects {
        gradle.projectsEvaluated {
            tasks.withType(JavaCompile) {
                options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
            }
        }
    }*/

    /*构建jnl，生成.so文件的吧？*/
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }


    dexOptions {
        jumboMode true
        javaMaxHeapSize "2g"
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/ASL2.0'
    }

    /*
     * Tries to get the version name from the latest Git tag
     */

    /*def getNewVersionName = { ->
        try {
            boolean isChanged = 'git diff --cached'.execute([], projectDir).text.length() > 0 || 'git diff'.execute([], projectDir).text.length() > 0
            return 'git describe --tags'.execute([], projectDir).text.replace('\n', '') + (isChanged ? "_modified" : "")
        }
        catch (IOException e) {
            logger.error("Wasn't able to get version tag: " + e.getMessage());
            return defaultConfig.versionName + "_nogit"
        }
    }*/

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName = outputFile.name.
                        replace(".apk", "-" + defaultConfig.versionName + ".apk")
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }


    buildTypes {
        release {
            zipAlignEnabled true
            minifyEnabled true
            proguardFiles "../proguard-android.txt"
        }
        /*debug {
            versionNameSuffix "_debug"
            zipAlignEnabled true
        }*/
    }

    lintOptions {
        abortOnError false
        ignoreWarnings false
        //disable 'MissingTranslation'
        //checkReleaseBuilds false
    }

    //多渠道打包
//    productFlavors {
//        play {
//            applicationId = "com.github.glomadrian.dashedprogressbar.demo"
//        }
//
//    }

}


// map for the version code
ext.versionCodes = ['armeabi-v7a': 2, 'arm64-v8a': 3, 'mips': 4, 'x86': 6, 'x86_64': 7]

android.applicationVariants.all { variant ->
    // assign different version code for each output
    variant.outputs.each { output ->
        output.versionCodeOverride =
                project.ext.versionCodes.
                        get(output.getFilter(com.android.build.OutputFile.ABI), 9) * 100000 +
                        android.defaultConfig.versionCode
        println("Using version name: $output.versionCodeOverride")
    }
    // assign different version name for each output
    variant.outputs.each { output ->
        def suffix = "_universal"
        if (output.getFilter(com.android.build.OutputFile.ABI) != null) {
            suffix = "_" + output.getFilter(com.android.build.OutputFile.ABI)
        }
        output.versionNameOverride = android.defaultConfig.versionName + suffix
    }
}





//改写敏感信息
def Properties props = new Properties()
def propFile = file('signing.properties')
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
        android.buildTypes.release.signingConfig = android.signingConfigs.release
        android.buildTypes.debug.signingConfig = android.signingConfigs.release
    }
}



dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile(name: 'circularprogressview-debug', ext: 'aar')
    compile('ch.acra:acra:4.7.0') {
        transitive = false
    }
    compile('com.stanfy:gson-xml-java:0.1.7') {
        exclude group: 'xmlpull', module: 'xmlpull'
    }
    testCompile 'junit:junit:4.12'
    //compile files('libs/realm-android-library-1.1.0-sources.jar')
    //compile files('libs/realm-annotations-1.1.0.jar')
    //compile files('libs/realm-annotations-processor-1.1.0.jar')
    //compile files('libs/realm-gradle-plugin-1.1.0.jar')
    //compile files('libs/realm-transformer-1.1.0.jar')
    compile files('libs/RemoteMetadataProvider.jar')
    compile 'com.android.support:appcompat-v7:24.1.1'
    compile 'com.android.support:support-v4:24.1.1'
    compile 'se.emilsjolander:stickylistheaders:2.7.0'
    compile 'com.google.code.gson:gson:2.5'
    compile 'com.google.android.gms:play-services-base:8.4.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.squareup.okhttp:okhttp:2.7.2'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.7.2'
    compile 'com.squareup.okhttp:logging-interceptor:2.7.2'
    compile 'com.github.castorflex.smoothprogressbar:library:1.1.0'
    compile 'de.mrmaffen:vlc-android-sdk:1.9.8'
    compile 'org.apache.lucene:lucene-core:4.7.2'
    compile 'org.apache.lucene:lucene-analyzers-common:4.7.2'
    compile 'org.apache.lucene:lucene-queryparser:4.7.2'
    compile 'commons-io:commons-io:2.4'
    compile 'net.sourceforge.findbugs:jsr305:1.3.7'
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.sothree.slidinguppanel:library:3.2.1'
    compile 'com.uservoice:uservoice-android-sdk:1.2.4'
    compile 'de.greenrobot:eventbus:2.4.1'
    compile 'com.daimajia.swipelayout:library:1.2.0@aar'
    compile 'org.jdeferred:jdeferred-android-aar:1.2.4'
    compile 'org.slf4j:slf4j-android:1.7.13'
    compile 'com.android.support:design:24.1.1'
    //compile 'com.github.PhilJay:MPAndroidChart:v2.2.5'
    compile 'com.github.PhilJay:MPAndroidChart-Realm:v1.1.0@aar'
    compile 'com.android.support:cardview-v7:24.1.1'
    compile 'org.greenrobot:eventbus:3.0.0'
    //module dependency

    compile project(':fragmentation')
    compile project(':MPChartLib')

    compile 'com.android.support:palette-v7:24.1.0'
    compile 'com.android.support:recyclerview-v7:24.1.1'
    //compile 'com.github.chrisbanes:PhotoView:1.2.6'
    compile 'com.facebook.fresco:fresco:0.13.0'
    //compile 'org.apache.httpcomponents:httpclient:4.5.2'
}

repositories {
    maven { url "https://jitpack.io" }
    maven {
        // this is for realm-db
        url 'http://oss.jfrog.org/artifactory/oss-snapshot-local'
    }
}


